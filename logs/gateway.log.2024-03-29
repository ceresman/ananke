[2024-03-29 07:06:07,632] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:06:07,633] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:06:07,633] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:06:07,637] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:08:42,021] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:08:42,022] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:08:42,022] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:08:42,026] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:08:44,778] AIGCHandler.py->pdfs line:93 [INFO]request-id is just a get req
[2024-03-29 07:16:26,401] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:16:26,402] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:16:26,402] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:16:26,406] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:18:03,931] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://ele.ink:19000/data/gpt3.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=admin_minio%2F20240328%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240328T231803Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=8ecf5c5bcf20cb6188611cfb21762f869dd5dcb0d434666ef04687897abbbe45', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:18:31,902] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:18:31,903] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:18:31,903] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:18:31,907] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:18:36,555] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://ele.ink:19000/data/gpt3.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=admin_minio%2F20240328%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240328T231836Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=471465dbdcd2a807d2bf1fbc55db2ca3a1df44ecf99b6299ff22fb19ec67b7e9', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:18:37,127] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://cs229.stanford.edu/notes2020spring/cs229-notes1.pdf', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:18:37,221] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_600bf8a69b7a148dbe3dg
[2024-03-29 07:18:37,825] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_46d19bebf9c0e7a5a9f0g
[2024-03-29 07:18:48,687] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_46d19bebf9c0e7a5a9f0g, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'completed'}, 'html': {'status': 'completed'}, 'docx': {'status': 'completed'}}}
[2024-03-29 07:18:55,332] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['CS229 Lecture Notes Andrew Ng', 'Document', {}], ['Supervised learning', 'Concept', {}], ['living areas', 'Feature', {}], ['prices', 'Feature', {}], ['houses', 'Object', {}], ['Portland, Oregon', 'Location', {}], ['dataset', 'Data', {}]], 'relationships': []}
[2024-03-29 07:18:57,909] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['i_1', 'TrainingExample', {'input': 'living area', 'output': 'price'}], ['n', 'TrainingSet', {}], ['h', 'Function', {'domain': 'X', 'range': 'Y'}], ['X', 'InputSpace', {}], ['Y', 'OutputSpace', {}], ['R', 'RealNumbers', {}]], 'relationships': [['i_1', 'belongsTo', 'n', {}], ['h', 'predictorFor', 'Y', {}], ['i_1', 'hasInput', 'X', {}], ['i_1', 'hasOutput', 'Y', {}]]}
[2024-03-29 07:19:00,447] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['linear_regression', 'Task', {}], ['housing_example', 'Dataset', {}], ['living_area', 'Feature', {}], ['number_of_bedrooms', 'Feature', {}], ['price', 'Target', {}], ['theta', 'Parameter', {}]], 'relationships': [['linear_regression', 'contains', 'housing_example', {}], ['housing_example', 'has', 'living_area', {}], ['housing_example', 'has', 'number_of_bedrooms', {}], ['housing_example', 'has', 'price', {}], ['linear_regression', 'defines', 'theta', {}]]}
[2024-03-29 07:19:02,715] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_600bf8a69b7a148dbe3dg, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'processing'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:19:04,238] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['\theta', 'Parameter', {}], ['h(x)', 'Function', {}], ['y', 'Value', {}], ['J(\theta)', 'CostFunction', {}], ['x', 'Value', {}], ['\theta_{j}', 'Parameter', {}], ['\theta_{i}', 'Parameter', {}], ['\theta_{i}', 'Parameter', {}]], 'relationships': [['\theta', 'target', 'J(\theta)', {}], ['h(x)', 'close_to', 'y', {}], ['h(x)', 'target', 'J(\theta)', {}], ['J(\theta)', 'measures', 'h(x)', {}], ['J(\theta)', 'measures', 'y', {}], ['\theta', 'close_to', 'h(x)', {}], ['\theta', 'moves_to', 'J(\theta)', {}], ['\theta_{j}', 'updates', 'J(\theta)', {}], ['\theta', 'updates', 'J(\theta)', {}], ['\theta_{i}', 'updates', 'h(x)', {}], ['J(\theta)', 'evaluates', 'h(x)', {}], ['J(\theta)', 'evaluates', 'y', {}]]}
[2024-03-29 07:19:06,278] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_600bf8a69b7a148dbe3dg, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'completed'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:19:16,882] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:19:16,883] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:19:16,884] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:19:16,887] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:19:19,585] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://ele.ink:19000/data/gpt3.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=admin_minio%2F20240328%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240328T231919Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=5fe1a5da2e90a72767388ed7c5387982cea7fc364afe1b5c3e7617e3688312cd', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:19:20,145] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://cs229.stanford.edu/notes2020spring/cs229-notes1.pdf', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:19:20,236] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_0507f0dab39bd751fdaeg
[2024-03-29 07:19:20,755] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_733a5db23857c1e81d16g
[2024-03-29 07:19:32,031] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_733a5db23857c1e81d16g, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'completed'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:19:40,971] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['CS229', 'Course', {'name': 'CS229'}], ['Lecture Notes', 'Document', {'title': 'Lecture Notes Andrew Ng (updates by Tengyu Ma)'}], ['Supervised learning', 'Topic', {}], ['examples', 'Entity', {}], ['dataset', 'Entity', {}], ['living areas', 'Entity', {}], ['prices', 'Entity', {}], ['houses', 'Entity', {}], ['Portland, Oregon', 'Location', {'name': 'Portland, Oregon'}], ['feet squared', 'Unit', {'name': 'feet squared'}], ['1000 dollars', 'Unit', {'name': '1000 dollars'}], ['Andrew Ng', 'Person', {'name': 'Andrew Ng'}], ['Tengyu Ma', 'Person', {'name': 'Tengyu Ma'}]], 'relationships': [['CS229', 'has', 'Lecture Notes', {}], ['Lecture Notes', 'contains', 'Supervised learning', {}], ['Supervised learning', 'examples of', 'examples', {}], ['examples', 'include', 'dataset', {}], ['dataset', 'includes', 'living areas', {}], ['dataset', 'includes', 'prices', {}], ['dataset', 'includes', 'houses', {}], ['houses', 'located in', 'Portland, Oregon', {}], ['living areas', 'measured in', 'feet squared', {}], ['prices', 'measured in', '1000 dollars', {}], ['Lecture Notes', 'updated by', 'Tengyu Ma', {}]]}
[2024-03-29 07:19:43,685] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['x', 'Variable', {'type': 'input', 'description': 'living area'}], ['y', 'Variable', {'type': 'output', 'description': 'price'}], ['training_set', 'Dataset', {'type': 'training'}], ['h', 'Function', {'type': 'hypothesis'}]], 'relationships': [['training_set', 'includes', 'x', {}], ['training_set', 'includes', 'y', {}], ['h', 'maps_to', 'x', {}], ['h', 'maps_to', 'y', {}]]}
[2024-03-29 07:19:45,020] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_0507f0dab39bd751fdaeg, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'completed'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:19:46,389] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['linear_regression', 'Task', {}], ['housing_example', 'Dataset', {}], ['living_area', 'Feature', {}], ['bedrooms', 'Feature', {}], ['price', 'Target', {}], ['hypothesis_function', 'Function', {}], ['parameters', 'Parameter', {}]], 'relationships': [['linear_regression', 'has', 'housing_example', {}], ['housing_example', 'includes', 'living_area', {}], ['housing_example', 'includes', 'bedrooms', {}], ['housing_example', 'includes', 'price', {}], ['linear_regression', 'defines', 'hypothesis_function', {}], ['hypothesis_function', 'depends_on', 'parameters', {}]]}
[2024-03-29 07:19:54,875] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['Tom B. Brown', 'Person', {}], ['Benjamin Mann', 'Person', {}], ['Nick Ryder', 'Person', {}], ['Jared Kaplan', 'Person', {}], ['Prafulla Dhariwal', 'Person', {}], ['Arvind Neelakantan', 'Person', {}], ['Pranav Shyam', 'Person', {}], ['Girish Sastry', 'Person', {}], ['Amanda Askell', 'Person', {}], ['Sandhini Agarwal', 'Person', {}], ['Ariel Herbert-Voss', 'Person', {}], ['Gretchen Krueger', 'Person', {}], ['Tom Henighan', 'Person', {}], ['Rewon Child', 'Person', {}], ['Aditya Ramesh', 'Person', {}], ['Daniel M. Ziegler', 'Person', {}], ['Jeffrey Wu', 'Person', {}], ['Clemens Winter', 'Person', {}], ['Christopher Hesse', 'Person', {}], ['Mark Chen', 'Person', {}], ['Eric Sigler', 'Person', {}], ['Mateusz Litwin', 'Person', {}], ['Scott Gray', 'Person', {}], ['Benjamin Chess', 'Person', {}], ['Jack Clark', 'Person', {}], ['Christopher Berner', 'Person', {}], ['Sam McCandlish', 'Person', {}], ['Alec Radford', 'Person', {}], ['Ilya Sutskever', 'Person', {}], ['Dario Amodei', 'Person', {}], ['OpenAI', 'Organization', {}], ['Johns Hopkins University', 'Organization', {}]], 'relationships': []}
[2024-03-29 07:19:57,004] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['linear regression', 'Model', {'has_global_optima': True, 'has_local_optima': False}], [6, 'LearningRate', {'value': 'not too large'}], ['J', 'ObjectiveFunction', {'type': 'convex quadratic'}], ['gradient descent', 'Algorithm', {'type': 'optimization'}], ['quadratic function', 'Function', {'type': 'convex'}], ['ellipses', 'Contour', {}], ['trajectory', 'Path', {}], ['initialization point', 'Point', {'coordinates': '(48,30)'}], ["x's", 'Marker', {}], ['successive values', 'Value', {}], ['dataset', 'Data', {'type': 'previous'}], ['housing price', 'Variable', {}], ['living area', 'Variable', {}], ['h_theta(x)', 'Function', {}]], 'relationships': [['linear regression', 'has', 6, {}], ['linear regression', 'has', 'J', {}], ['linear regression', 'uses', 'gradient descent', {}], ['gradient descent', 'traverses', 'quadratic function', {}], ['gradient descent', 'initiates_at', 'initialization point', {'coordinates': '(48,30)'}], ['gradient descent', 'passes_through', "x's", {}], ['batch gradient descent', 'fits', 'theta', {}], ['theta', 'learns_to_predict', 'housing price', {'as_function_of': 'living area'}], ['theta', 'obtains', '\\theta_{0}=71.27, \\theta_{1}=0.1345', {}], ['plot', 'includes', 'h_theta(x)', {}], ['plot', 'includes', 'training data', {}]]}
[2024-03-29 07:19:59,860] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['Introduction', 'Section', {}], ['Approach', 'Section', {}], ['Model and Architectures', 'Subsection', {}], ['Training Dataset', 'Subsection', {}], ['Training Process', 'Subsection', {}], ['Evaluation', 'Subsection', {}], ['Results', 'Section', {}], ['Language Modeling, Cloze, and Completion Tasks', 'Subsection', {}], ['Closed Book Question Answering', 'Subsection', {}], ['Translation', 'Subsection', {}], ['Winograd-Style Tasks', 'Subsection', {}], ['Common Sense Reasoning', 'Subsection', {}], ['Reading Comprehension', 'Subsection', {}], ['SuperGLUE', 'Subsection', {}], ['NLI', 'Subsection', {}], ['Synthetic and Qualitative Tasks', 'Subsection', {}], ['Measuring and Preventing Memorization Of Benchmarks', 'Section', {}], ['Limitations', 'Section', {}], ['Broader Impacts', 'Section', {}], ['Misuse of Language Models', 'Subsection', {}], ['Fairness, Bias, and Representation', 'Subsection', {}], ['Energy Usage', 'Subsection', {}], ['Related Work', 'Section', {}], ['Conclusion', 'Section', {}], ['Details of Common Crawl Filtering', 'Appendix', {}], ['Details of Model Training', 'Appendix', {}], ['Details of Test Set Contamination Studies', 'Appendix', {}], ['Total Compute Used to Train Language Models', 'Appendix', {}], ['Human Quality Assessment of Synthetic News Articles', 'Appendix', {}], ['Additional Samples from GPT-3', 'Appendix', {}], ['Details of Task Phrasing and Specifications', 'Appendix', {}], ['Results on All Tasks for All Model Sizes', 'Appendix', {}]], 'relationships': []}
[2024-03-29 07:20:02,226] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['J', 'Function', {}], ['\theta', 'Variable', {}], ['A', 'Matrix', {}], ['f', 'Function', {}], ['X', 'Matrix', {}], ['nabla_{A} f(A)', 'Matrix', {}]], 'relationships': [['J', 'minimizes', '\theta', {}], ['f', 'maps', 'X', {}], ['f', 'is defined by', 'A', {}], ['also known as', 'f', 'Function', {}], ['nabla_{A} f(A)', 'is derivative of', 'f', {}], ['nabla_{A} f(A)', 'is matrix with element', '\x0crac{\nabla f}{\nabla A_{ij}}', {}]]}
[2024-03-29 07:20:09,551] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['theta', 'Parameter', {}], ['y', 'Variable', {}], ['X', 'Variable', {}], ['\nabla_{x} b^{T} x', 'Derivative', {}], ['\nabla_{x} x^{T} A x', 'Derivative', {}], ['A', 'Matrix', {'symmetric': True}], ['J', 'Cost Function', {}], ['x', 'Variable', {}], ['\nabla_{x} x^{T} A x', 'Derivative', {}], ['\nabla_{x} b^{T} x', 'Derivative', {}]], 'relationships': [['theta', 'minimizes', 'J', {}], ['X', 'is related to', 'y', {}], ['y', 'is related to', 'x', {}], ['\nabla_{x} b^{T} x', 'equals', 'b^{T} x', {}], ['\nabla_{x} b^{T} x', 'equals', 'x^{T} b', {}], ['\nabla_{x} x^{T} A x', 'equals', '2 A x', {}], ['J', 'is minimized by', 'X^{T} X \\theta', {}], ['J', 'is minimized by', 'X^{T} \\vec{y}', {}], ['y', 'is distributed as', 'p(y^{(i)} \\mid x^{(i)}; \\theta)', {}], ['p(\\epsilon^{(i)})', 'is given by', '\\frac{1}{\\sqrt{2 \\pi} \\sigma} \\exp(-(\\frac{(\\epsilon^{(i)})^{2}}{2 \\sigma^{2}}))', {}]]}
[2024-03-29 07:20:11,000] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['GPT-3', 'Model', {'parameter_count': '175 billion', 'name': 'GPT-3'}], ['SuperGLUE', 'NLPBenchmarkSuite', {}], ['CoQA', 'NLPDataset', {}], ['TriviaQA', 'NLPDataset', {}], ['QuAC', 'NLPDataset', {}], ['RACE', 'NLPDataset', {}], ['ANLI', 'NLPDataset', {}], ['Task', 'NLPBenchmark', {}], ['NaturalLanguageInference', 'NLPTask', {}], ['ReadingComprehension', 'NLPTask', {}], ['SyntheticNewsArticles', 'Task', {}], ['HumanEvaluator', 'Role', {}]], 'relationships': [['GPT-3', 'evaluated_on', 'SuperGLUE', {}], ['GPT-3', 'evaluated_on', 'CoQA', {}], ['GPT-3', 'evaluated_on', 'TriviaQA', {}], ['GPT-3', 'evaluated_on', 'QuAC', {}], ['GPT-3', 'evaluated_on', 'RACE', {}], ['GPT-3', 'evaluated_on', 'ANLI', {}], ['GPT-3', 'evaluated_on', 'Task', {}], ['GPT-3', 'achieves_promising_results_in', 'ZeroShotSetting', {}], ['GPT-3', 'achieves_promising_results_in', 'OneShotSetting', {}], ['GPT-3', 'achieves_promising_results_in', 'FewShotSetting', {}], ['GPT-3', 'displays', 'OneShotProficiency', {}], ['GPT-3', 'displays', 'FewShotProficiency', {}], ['GPT-3', 'can_generate', 'SyntheticNewsArticles', {}], ['HumanEvaluator', 'evaluates', 'SyntheticNewsArticles', {}], ['GPT-3', 'struggles_on', 'NaturalLanguageInference', {}], ['GPT-3', 'struggles_on', 'ReadingComprehension', {}], ['GPT-3', 'struggles_on', 'SyntheticNewsArticles', {}]]}
[2024-03-29 07:20:18,030] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['language_model', 'Entity', {'name': 'language model'}], ['task', 'Entity', {'name': 'task'}], ['method', 'Entity', {'name': 'method'}], ['setting', 'Entity', {'name': 'setting'}], ['benchmark', 'Entity', {'name': 'benchmark'}], ['model', 'Entity', {'name': 'model'}], ['training_data', 'Entity', {'name': 'training data'}], ['training_process', 'Entity', {'name': 'training process'}], ['evaluation', 'Entity', {'name': 'evaluation'}], ['section', 'Entity', {'name': 'section'}]], 'relationships': [['language_model', 'used in', 'method', {}], ['method', 'requires', 'model', {}], ['method', 'requires', 'task', {}], ['setting', 'provides', 'convenience', {}], ['setting', 'provides', 'robustness', {}], ['setting', 'avoids', 'spurious_correlations', {}], ['setting', 'challenges', 'humans', {}], ['setting', 'promotes', 'few_shot', {}], ['setting', 'trades_off', 'task_performance', {}], ['setting', 'trades_off', 'sample_efficiency', {}], ['benchmark', 'compares', 'setting', {}], ['model', 'evaluated_by', 'evaluation', {}], ['training_data', 'used_in', 'method', {}], ['training_process', 'described_in', 'section', {}], ['evaluation', 'described_in', 'section', {}]]}
[2024-03-29 07:20:20,781] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['tau', 'Parameter', {'description': 'bandwidth parameter'}], ['x', 'Point', {}], ['theta', 'Parameter', {'description': 'model parameters'}], ['h', 'Hypothesis', {}], ['y', 'Value', {'type': 'binary', 'values': [0, 1]}], ['spam', 'Label', {'type': 'email'}]], 'relationships': [['x', 'training example', 'tau', {'distance': 'query point'}], ['x', 'training example', 'y', {}], ['theta', 'fit to', 'x', {}], ['h', 'represent', 'x', {'non-parametric': True}], ['x', 'predict', 'y', {}]]}
[2024-03-29 07:20:22,955] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['GPT-3 Small', 'Model', {'params': '125M', 'layers': 12, 'd_model': 768, 'n_heads': 12, 'd_head': 64}], ['GPT-3 Medium', 'Model', {'params': '350M', 'layers': 24, 'd_model': 1024, 'n_heads': 16, 'd_head': 64}], ['GPT-3 Large', 'Model', {'params': '760M', 'layers': 24, 'd_model': 1536, 'n_heads': 16, 'd_head': 96}], ['GPT-3 XL', 'Model', {'params': '1.3B', 'layers': 24, 'd_model': 2048, 'n_heads': 24, 'd_head': 128}], ['GPT-3 2.7B', 'Model', {'params': '2.7B', 'layers': 32, 'd_model': 2560, 'n_heads': 32, 'd_head': 80}], ['GPT-3 6.7B', 'Model', {'params': '6.7B', 'layers': 32, 'd_model': 4096, 'n_heads': 32, 'd_head': 128}], ['GPT-3 13B', 'Model', {'params': '13.0B', 'layers': 40, 'd_model': 5140, 'n_heads': 40, 'd_head': 128}], ['GPT-3 175B', 'Model', {'params': '175.0B', 'layers': 96, 'd_model': 12288, 'n_heads': 96, 'd_head': 128}]], 'relationships': []}
[2024-03-29 07:20:26,386] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['logistic_regression_model', 'Model', {}], ['theta', 'Parameter', {}], ['maximum_likelihood_estimator', 'Assumption', {}], ['set_of_probabilistic_assumptions', 'Assumption', {}], ['parameters', 'Parameter', {}], ['training_examples', 'Data', {}], ['likelihood', 'Function', {}]], 'relationships': [['logistic_regression_model', 'fit', 'theta', {}], ['logistic_regression_model', 'endow_with', 'set_of_probabilistic_assumptions', {}], ['set_of_probabilistic_assumptions', 'fit_parameters_via', 'maximum_likelihood_estimator', {}], ['maximum_likelihood_estimator', 'assume', 'parameters', {}], ['training_examples', 'generate', 'parameters', {}], ['parameters', 'have', 'likelihood', {}]]}
[2024-03-29 07:20:32,703] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['perceptron', 'Model', {'description': 'Rough model for how individual neurons in the brain work'}], ['algorithm', 'Algorithm', {'description': 'Method for solving a computational problem'}], ['logistic regression', 'Algorithm', {'description': 'Algorithm for learning a logistic model'}], ['least squares linear regression', 'Algorithm', {'description': 'Algorithm for fitting a linear model by minimizing the squared differences between the observed and predicted values'}], ["Newton's method", 'Algorithm', {'description': 'Method for finding the zeros of a function by iteratively updating the guess'}]], 'relationships': [['perceptron', 'related_to', 'neuron', {'type': 'individual'}], ['perceptron', 'related_to', 'brain', {'type': 'functioning'}], ['algorithm', 'related_to', 'logistic regression', {'type': 'learning'}], ['algorithm', 'related_to', 'least squares linear regression', {'type': 'model fitting'}], ['algorithm', 'related_to', "Newton's method", {'type': 'finding zeros of a function'}]]}
[2024-03-29 07:20:40,495] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['Bernoulli distribution', 'Distribution', {}], ['Gaussian distribution', 'Distribution', {}], ['linear regression', 'GLM', {}], ['logistic regression', 'GLM', {}], ['sigmoid function', 'Function', {}]], 'relationships': [['Bernoulli distribution', 'associated_with', 'logistic regression', {}], ['Gaussian distribution', 'associated_with', 'linear regression', {}], ['linear regression', 'determines', 'theta', {}], ['linear regression', 'predicts', 'h_theta(x)', {}], ['Gaussian distribution', 'parameter', 'sigma^2', {}], ['sigma^2', 'arbitrary_value', '', {}]]}
[2024-03-29 07:20:45,237] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['Gaussian', 'Distribution', {'parameter': 'mu'}], ['exponential family', 'Family', {}], ['multinomial', 'Family', {}], ['Poisson', 'Distribution', {}], ['gamma', 'Distribution', {}], ['exponential', 'Distribution', {}], ['beta', 'Distribution', {}], ['Dirichlet', 'Distribution', {}], ['GLM', 'Model', {}], ['random variable', 'Variable', {}], ['conditional distribution', 'Distribution', {}]], 'relationships': [['Gaussian', 'belongs to', 'exponential family', {}], ['multinomial', 'belongs to', 'exponential family', {}], ['Poisson', 'belongs to', 'exponential family', {}], ['gamma', 'belongs to', 'exponential family', {}], ['exponential', 'belongs to', 'exponential family', {}], ['beta', 'belongs to', 'exponential family', {}], ['Dirichlet', 'belongs to', 'exponential family', {}], ['GLM', 'is used for', 'Poisson', {}], ['GLM', 'is used for', 'gamma', {}], ['GLM', 'is used for', 'exponential', {}], ['GLM', 'is used for', 'beta', {}], ['random variable', 'is involved in', 'exponential family', {}], ['conditional distribution', 'has parameters', 'parameter', {}]]}
[2024-03-29 07:20:51,891] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['logistic regression', 'Topic', {}], ['binary classification', 'Task', {}], ['Bernoulli distribution', 'Distribution', {}], ['exponential family distribution', 'Distribution', {}], ['hypothesis functions', 'Function', {}], ['logistic function', 'Function', {}], ['GLMs', 'Model', {}], ['softmax regression', 'Topic', {}], ['classification problem', 'Task', {}], ['response variable', 'Variable', {}], ['k values', 'Value', {}], ['multinomial distribution', 'Distribution', {}]], 'relationships': [['logistic regression', 'is a', 'binary classification', {}], ['binary classification', 'involves', 'Bernoulli distribution', {}], ['Bernoulli distribution', 'is a', 'exponential family distribution', {}], ['hypothesis functions', 'are part of', 'GLMs', {}], ['logistic function', 'is a type of', 'hypothesis functions', {}], ['softmax regression', 'is a', 'classification problem', {}], ['classification problem', 'involves', 'response variable', {}], ['response variable', 'can take', 'k values', {}], ['response variable', 'is distributed according to', 'multinomial distribution', {}]]}
[2024-03-29 07:21:00,024] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['eta', 'Variable', {}], ['phi', 'Variable', {}], ['x', 'Variable', {}], ['theta', 'Parameter', {'dimension': 'd+1'}]], 'relationships': [['eta', 'linearly_related_to', 'x', {}], ['eta', 'calculated_by', 'theta', {}], ['phi', 'calculated_by', 'eta', {}], ['phi', 'softmax_function', 'eta', {}], ['phi', 'related_to', 'x', {}], ['phi', 'conditional_distribution_of_y_given_x', 'theta', {}], ['phi', 'output_of_hypothesis', 'theta', {}]]}
[2024-03-29 07:21:02,166] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['n1', 'training set', {}], ['n2', 'example', {}], ['n3', 'parameter', {}], ['n4', 'model', {}]], 'relationships': [['n1', 'consists-of', 'n2', {}], ['n3', 'corresponds-to', 'n4', {}]]}
[2024-03-29 07:21:06,275] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['GPT-3', 'Model', {'size': 'very large'}], ['news article', 'Content', {'genre': 'news'}], ['humans', 'Person', {'location': 'US-based', 'average': 'participant'}]], 'relationships': [['GPT-3', 'generates', 'news article', {'ability': 'few-shot learning'}], ['humans', 'distinguish', 'news article', {'generated by': 'GPT-3'}]]}
[2024-03-29 07:21:18,571] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['United Methodists', 'Religion', {'members': '12.5 million'}], ['debate', 'Event', {'type': 'intense'}], ['General Conference', 'Event', {'annual': True}], ['Creation of new denomination', 'Event', {'expected': True, 'creation year': 2020}], ['Christian Methodist denomination', 'Religion', {'opposite': 'United Methodist'}], ['Protestant denomination in the U.S.', 'Religion', {'largest': True}], ['Evangelical United Brethren Church', 'Religion', {'formation year': 1968, 'percentage left': 'roughly 10%'}], ['schism', 'Event', {'critical time': True}], ['Gay marriage', 'Issue', {'dividing': True}], ['ordination of transgender clergy', 'Issue', {'division': True}], ['North Pacific regional conference', 'Event', {'voted to ban': True}], ['South Pacific regional conference', 'Event', {'voted to allow': True}], ['Figure 3.14 news article', 'Media', {'accuracy': '12%'}], ["Star's Tux Promise", 'Event', {'headline making': True}], ['Joaquin Phoenix', 'Person', {'act': 'appeared', 'behavior': 'not changing', 'attendance': ['Golden Globes', 'Oscars']}], ['paper bag over his head', 'Fashion', {'message': "I am a shape-shifter. I can't change the world. I can only change myself."}], ['Hollywood mold', 'Society', {'conforming': False}], ['Megyn Kelly', 'Person', {'act': 'criticism', 'attitude': 'not impressed', 'show': 'The Tonight Show', 'encouragement': True}], ['Figure 3.15 news article', 'Media', {'accuracy': '61%'}]], 'relationships': [['United Methodists', 'agreed to', 'historic split', {'end result': 'new denomination'}], ['historic split', 'expected to end in', 'Creation of new denomination', {'theologically and socially conservative': True}], ['United Methodists', 'losing members', 'years'], ['United Methodists', 'pushed toward', 'brink of a schism', {'critical time': True}], ['denomination', 'been shrinking in', 'recent decades'], ['new split', 'be the second in', 'United Methodist Church'], ['denomination', 'split over', 'ordination of transgender clergy'], ['transgender clergy', 'banned by', 'North Pacific regional conference'], ['transgender clergy', 'allowed by', 'South Pacific regional conference'], ["Star's Tux Promise", 'drew', "Megyn Kelly's Sarcasm"], ['Joaquin Phoenix', 'pledged to', 'not change for each awards event'], ["Phoenix's publicist", 'saying', 'wearing a tux no matter what'], ["Phoenix's publicist", 'saying', "it'll be wearing a tux"]]}
[2024-03-29 07:21:20,664] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['whatpu', 'Unknown', {}], ['farduddle', 'Unknown', {}], ['yalubalu', 'Unknown', {}], ['Burringo', 'Unknown', {}], ['Gigamuru', 'Unknown', {}], ['screeg', 'Unknown', {}]], 'relationships': []}
[2024-03-29 07:21:32,109] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['benchmark analysis', 'Task', {'type': 'contamination analysis'}], ['benchmarks', 'Dataset', {'name': 'benchmark'}], ['training set', 'Dataset', {'name': 'training set'}], ['PIQA', 'Benchmark', {'name': 'PIQA'}], ['Winograd', 'Benchmark', {'name': 'Winograd'}], ['tasks', 'Task', {'type': 'group of tasks'}], ['Reading Comprehension', 'Task', {'type': 'Reading Comprehension'}], ['German translation', 'Task', {'type': 'German translation'}], ['Reversed Words and Anagrams', 'Task', {'type': 'Reversed Words and Anagrams'}], ['web pages', 'Entity', {'type': 'web page'}], ['WMT16 German-English test set', 'Dataset', {'name': 'WMT16 German-English test set'}]], 'relationships': [['benchmark analysis', 'has', 'benchmarks', {}], ['benchmark analysis', 'has', 'training set', {}], ['benchmark analysis', 'has', 'PIQA', {'contamination level': 'potential'}], ['benchmark analysis', 'has', 'Winograd', {'contamination level': 'potential'}], ['benchmarks', 'changed performance on', 'training set', {'change': 'negligible'}], ['PIQA', 'flagged for', 'further review', {}], ['Winograd', 'flagged for', 'further review', {}], ['tasks', 'changed performance on', 'training set', {}], ['tasks', 'affects', 'Reading Comprehension', {'contamination level': 'potentially contaminated'}], ['tasks', 'affects', 'German translation', {'contamination level': 'potentially contaminated'}], ['tasks', 'affects', 'Reversed Words and Anagrams', {'contamination level': 'potentially contaminated'}], ['Reading Comprehension', 'flagged for', 'further review', {}], ['German translation', 'flagged for', 'further review', {}], ['Reversed Words and Anagrams', 'flagged for', 'further review', {}], ['German translation', 'contains', 'WMT16 German-English test set', {'contamination level': 'potentially contaminated'}], ['web pages', 'owned by', 'training set', {}]]}
[2024-03-29 07:21:41,379] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['GPT-3', 'Language Model', {'quality': 'high'}], ['GPT-2', 'Language Model', {'release_year': 2019}], ['misinformation', 'Harmful Activity', {}], ['spam', 'Harmful Activity', {}], ['phishing', 'Harmful Activity', {}], ['misuse_discussions', 'Forum Discussions', {}], ['media_coverage', 'Event', {}], ['threat_analysis', 'Profession', {}]], 'relationships': [['GPT-3', 'improves', 'misinformation', {}], ['GPT-3', 'improves', 'spam', {}], ['GPT-3', 'improves', 'phishing', {}], ['GPT-2', 'initial_release', 'misuse_discussions', {'year': 2019}], ['misuse_discussions', 'correlated_with', 'media_coverage', {}], ['GPT-2', 'skill_level', 'misuse_discussions', {'level': 'low'}], ['GPT-2', 'skill_level', 'misuse_discussions', {'level': 'moderate'}], ['GPT-2', 'discussion_mentions', 'threat_analysis'], ['GPT-3', 'reliability_improves', 'misuse_discussions', {}], ['GPT-3', 'reliability_improves', 'threat_analysis', {}], ['GPT-3', 'incentive', 'phishing', {'method': 'low-cost, low-effort, high-yield'}]]}
[2024-03-29 07:21:46,708] doc_flow.py->get_chunks line:163 [INFO]summary is {'nodes': [['bias', 'Theme', {}], ['model', 'Entity', {'name': 'GPT-3'}], ['occupations', 'Concept', {}], ['associations', 'Concept', {}], ['gender', 'Attribute', {}], ['occupation', 'Attribute', {}], ['probability', 'Attribute', {}], ['male_identifier', 'Attribute', {}], ['female_identifier', 'Attribute', {}], ['competent_variant', 'Attribute', {}], ['incompetent_variant', 'Attribute', {}], ['language_models', 'Entity', {}], ['accuracy', 'Attribute', {}], ['pronoun_resolution', 'Task', {}], ['statistical_method', 'Technique', {}]], 'relationships': [['bias', 'affects', 'model', {}], ['bias', 'affects', 'occupations', {}], ['bias', 'affects', 'associations', {}], ['bias', 'affects', 'language_models', {}], ['model', 'learns_from', 'occupations', {}], ['model', 'reflects', 'associations', {}], ['model', 'has', 'statistics', {}], ['occupations', 'associated_with', 'associations', {}], ['associations', 'associated_with', 'gender', {}], ['associations', 'associated_with', 'occupation', {}], ['associations', 'has', 'probability', {}], ['associations', 'learned_by', 'model', {}], ['associations', 'focused_on', 'gender', {}], ['associations', 'focused_on', 'competent_variant', {}], ['associations', 'focused_on', 'incompetent_variant', {}], ['model', 'used_in', 'pronoun_resolution', {}], ['pronoun_resolution', 'used_method', 'statistical_method', {}]]}
[2024-03-29 07:27:37,965] server.py-><module> line:26 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 07:27:37,966] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 07:27:37,966] server.py-><module> line:33 [INFO]ApiGateWay server start begin!
[2024-03-29 07:27:37,970] server.py-><module> line:39 [INFO]ApiGateWay server start end!
[2024-03-29 07:27:40,670] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://ele.ink:19000/data/gpt3.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=admin_minio%2F20240328%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240328T232740Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=a838c4502da22ecce178b9a062cf24d97fb2bc2f98047fc6982c6643b8128eac', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:27:41,341] mathpix.py->process_pdf_by_mathpix line:45 [INFO]mathpix-req: {'url': 'http://cs229.stanford.edu/notes2020spring/cs229-notes1.pdf', 'conversion_formats': {'docx': True, 'tex.zip': True, 'html': True}}
[2024-03-29 07:27:41,437] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_53210f3c4193bac95e20g
[2024-03-29 07:27:41,996] mathpix.py->__handle_pdf line:114 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_027de1370aaa24addb4ag
[2024-03-29 07:27:49,795] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_027de1370aaa24addb4ag, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'loaded'}, 'html': {'status': 'processing'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:27:53,460] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_027de1370aaa24addb4ag, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'completed'}, 'html': {'status': 'completed'}, 'docx': {'status': 'completed'}}}
[2024-03-29 07:28:06,870] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_53210f3c4193bac95e20g, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'processing'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:28:10,443] mathpix.py->__handle_pdf line:120 [INFO]request-id: willamhou-batch 's the pdf_id is 2024_03_28_53210f3c4193bac95e20g, process is {'status': 'completed', 'version': 'RSK-P111p6i2', 'conversion_status': {'tex.zip': {'status': 'processing'}, 'html': {'status': 'completed'}, 'docx': {'status': 'processing'}}}
[2024-03-29 07:30:16,917] doc_flow.py->get_chunks line:171 [INFO]chunk except is Unterminated string starting at: line 32 column 17 (char 996), summary is 
{
    "Nodes": [
        ["Atheism", "Religion", {}],
        ["Buddhism", "Religion", {}],
        ["Christianity", "Religion", {}],
        ["Hinduism", "Religion", {}],
        ["Islam", "Religion", {}],
        ["Judaism", "Religion", {}],
        ["Theists", "Word", {}],
        ["Cool", "Word", {}],
        ["Agnostics", "Word", {}],
        ["Mad", "Word", {}],
        ["Theism", "Word", {}],
        ["Defensive", "Word", {}],
        ["Complaining", "Word", {}],
        ["Correct", "Word", {}],
        ["Arrogant", "Word", {}],
        ["Characterized", "Word", {}],
        ["Attent", "Word", {}],
        ["Ignorant", "Word", {}],
        ["Response", "Word", {}],
        ["Judgmental", "Word", {}],
        ["Grace", "Word", {}],
        ["Execution", "Word", {}],
        ["Egypt", "Word", {}],
        ["Continue", "Word", {}],
        ["Comments", "Word", {}],
        ["Officially", "Word", {}],
        ["Caste", "Word", {}],
        ["Cows", "Word", {}],
        ["BJP", "Wor
[2024-03-29 07:31:02,508] mathpix.py->__handle_pdf line:148 [INFO]request-id: willamhou-batch handle 2024_03_28_027de1370aaa24addb4ag pdf end!
[2024-03-29 14:13:24,176] test.py->load_yaml line:15 [INFO]config path is None
[2024-03-29 14:13:52,157] test.py->load_yaml line:15 [INFO]config path is None
[2024-03-29 14:14:04,965] test.py-><module> line:27 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 14:14:04,966] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 14:14:05,030] test.py-><module> line:35 [INFO]ApiGateWay server start begin!
[2024-03-29 14:14:05,031] doc_flow.py->search line:228 [INFO]pdf_id is 2024_03_28_d918ce007641daed7730g, text is Machine Learning Algorithm
[2024-03-29 14:46:22,404] test.py-><module> line:27 [INFO]config is {'port': 18080, 'redis-hostport': {'ip': 'ele.ink', 'port': 16379}}
[2024-03-29 14:46:22,405] tools.py->init_redis_single line:36 [INFO]redis-single init success!
[2024-03-29 14:46:22,450] test.py-><module> line:35 [INFO]ApiGateWay server start begin!
[2024-03-29 14:46:22,450] doc_flow.py->search line:228 [INFO]pdf_id is 2024_03_28_d918ce007641daed7730g, text is Machine Learning Algorithm
